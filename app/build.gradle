plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id("kotlin-parcelize")
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace 'com.example.starca'
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.example.starca"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Setting placeholders for the BuildConfig fields that need to be accessed in AndroidManifest
        manifestPlaceholders += [ BACK4APP_SERVER_URL: "apikeyProperties['BACK4APP_SERVER_URL']" ] //these back4app things work
        manifestPlaceholders += [ BACK4APP_APP_ID: "apikeyProperties['BACK4APP_APP_ID']" ]
        manifestPlaceholders += [ BACK4APP_CLIENT_KEY: "apikeyProperties['BACK4APP_CLIENT_KEY']" ]

        manifestPlaceholders += [ MAPS_API_KEY: "AIzaSyAjIJ7u9_qP5FUFtobqb1ubFIseIgRTDkA" ] // this works.
//        manifestPlaceholders += [ MAPS_API_KEY: "apikeyProperties['MAPS_API_KEY']" ]// this doesn't work.

        // BuildConfig Fields (api keys, urls, etc)
        buildConfigField("String", "BACK4APP_SERVER_URL", apikeyProperties['BACK4APP_SERVER_URL'])
        buildConfigField("String", "BACK4APP_APP_ID", apikeyProperties['BACK4APP_APP_ID'])
        buildConfigField("String", "BACK4APP_CLIENT_KEY", apikeyProperties['BACK4APP_CLIENT_KEY'])
        buildConfigField("String", "MAPS_API_KEY", apikeyProperties['MAPS_API_KEY'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
   // Kotlin
    implementation("androidx.fragment:fragment-ktx:1.5.4")
    // Testing Fragments in Isolation
    debugImplementation("androidx.fragment:fragment-testing:1.5.4")
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.google.android.gms:play-services-maps:18.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Parse (back4app) (Setup: https://www.back4app.com/docs/android/parse-android-sdk)
    implementation 'com.github.parse-community.Parse-SDK-Android:parse:4.1.0'

    // Glide library used for image loading
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    // Library used to create circular ImageViews
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation 'com.codepath.libraries:asynchttpclient:2.2.0'


}
